stages:
  - readme
  - build
  - publish

image: docker:19.03.8

readme:
  stage: readme
  image: alpine:3.12
  script:
    - apk add gettext
    - source .gitlab/.readme_variables
    - echo ""
    - echo ""
    - echo $LOGO_IMAGE_LINK
    - echo $GITHUB_REPONAME
    - echo $GITHUB_USERNAME
    - echo $DOCKERHUB_REPONAME
    - echo $DOCKERHUB_TAG
    - echo $DOCKERHUB_USERNAME
    - echo $DESCRIPTION
    - echo $CREATOR_USERNAME
    - echo $CREATOR_REPONAME
    - echo $EXAMPLE_SITE_LINK
    - echo $EXAMPLE_IMAGE_LINK
    - echo $CONTAINER_PORT
    - echo $CONTAINER_PORT2
    - echo $BASE_IMAGE
    - echo ""
    - echo ""
    - envsubst < .gitlab/readme_template | less
    - echo ""
    - echo ""
build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:port || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:port --tag $CI_REGISTRY_IMAGE:port -f Dockerfile.port .
    - docker push $CI_REGISTRY_IMAGE:port
    - docker build --cache-from $CI_REGISTRY_IMAGE:proxy --tag $CI_REGISTRY_IMAGE:proxy -f Dockerfile.proxy .
    - docker push $CI_REGISTRY_IMAGE:proxy

publish:
  stage: publish
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
    - docker build --tag $DOCKER_USER/$DOCKER_REPO:arm.port -f Dockerfile.port .
    - docker push $DOCKER_USER/$DOCKER_REPO:arm.port
    - docker build --tag $DOCKER_USER/$DOCKER_REPO:arm.proxy -f Dockerfile.proxy .
    - docker push $DOCKER_USER/$DOCKER_REPO:arm.proxy